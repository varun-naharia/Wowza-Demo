//
//  BaseController.swift
//  Testing
//
//  Created by Dinesh on 05/08/17.
//  Copyright Â© 2017 Dinesh Saini. All rights reserved.
//
//  This file was generated by the DVStarterProject Xcode Templates,
//  see http://technaharia.in
//  Credit: Dinesh Saini, Varun Naharia

import UIKit

class BaseController: UIViewController {
    
    var reachability = Reachability()!
    let noInternetview = NoInternetView.loadFromXIB()
    override func viewDidLoad() {
        super.viewDidLoad()
        
        noInternetview.tag = 1000
        self.reachabilityNotifier()
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func reachabilityNotifier() -> Void {
        reachability.whenReachable = { reachability in
            // this is called on a background thread, but UI updates must
            // be on the main thread, like this:
            DispatchQueue.main.async {
                if self.view.subviews.contains(self.noInternetview)
                {
                    self.noInternetview.removeFromSuperview()
                }
                if reachability.isReachableViaWiFi {
                    print("Reachable via WiFi")
                } else {
                    print("Reachable via Cellular")
                }
                
            }
        }
        reachability.whenUnreachable = { reachability in
            // this is called on a background thread, but UI updates must
            // be on the main thread, like this:
            DispatchQueue.main.async {
                print("Not reachable")
                self.noInternetview.frame = self.view.frame
                self.view.addSubview(self.noInternetview)
                
            }
        }
        
        do {
            try reachability.startNotifier()
        } catch {
            print("Unable to start notifier")
        }
    }
    
}
